stages:
- build
- test
- deploy

cache: 
  paths:
    - node_modules/

dependencies:
  image: node:latest
  stage: build
  script:
    - npm install
  artifacts:
    paths:
      - node_modules/  

build-docker:
  image: docker:stable
  tags: 
   - runner-dind
  needs: [dependencies] 
  services:
   - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""

  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  
  stage: build
  script:
  - docker build -t $PROJECT_NAME . 
  - docker tag $PROJECT_NAME $CI_REGISTRY_USER/$PROJECT_NAME:$PROJECT_TAG
  - docker push $CI_REGISTRY_USER/$PROJECT_NAME:$PROJECT_TAG

deploy-app:
  image: docker:stable
  stage: deploy
  tags:
    - runner-dind
  #needs: [build-docker] 
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no $DEPLOY_HOST "docker login"
    - ssh -o StrictHostKeyChecking=no $DEPLOY_HOST "docker pull $CI_REGISTRY_USER/$PROJECT_NAME:$PROJECT_TAG"
    - ssh -o StrictHostKeyChecking=no $DEPLOY_HOST "docker stop $(docker ps -q)"
    - ssh -o StrictHostKeyChecking=no $DEPLOY_HOST "docker run -d -p 3000:3000 $CI_REGISTRY_USER/$PROJECT_NAME:$PROJECT_TAG"
    - ssh -o StrictHostKeyChecking=no $DEPLOY_HOST "docker ps"
    - echo "OK!"
  only:
    - master